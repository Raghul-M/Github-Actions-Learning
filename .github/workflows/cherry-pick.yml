name: Push to Release Branch & Cherry Pick commits

on:
  workflow_dispatch:
    inputs:
      source_repo:
        description: '[Upstream] source repository to cherry-pick from'
        required: true
        type: choice
        options:
          - 'openvino_model_server'
          - 'kserve'
          - 'modelmesh'
          - 'caikit-tgis-serving'
          - 'openvino'
          - 'vllm'
          - 'caikit-nlp'
          - 'caikit'
          - 'odh-model-controller'
          - 'caikit-tgis-backend'
          - 'caikit-nlp-client'
          - 'model-registry'
      source_branch:
        description: 'Upstream branch to cherry-pick from'
        required: true
      cherry_pick_commits:
        description: 'SHA(s) of the commit(s) to cherry-pick (space-separated)'
        required: true
      target_repo:
        description: '[Downstream] Target repository to push to'
        required: true
        type: choice
        options:
          - 'openvino_model_server'
          - 'kserve'
          - 'modelmesh'
          - 'caikit-tgis-serving'
          - 'openvino'
          - 'vllm'
          - 'caikit-nlp'
          - 'caikit'
          - 'odh-model-controller'
          - 'caikit-tgis-backend'
          - 'caikit-nlp-client'
          - 'model-registry'
      target_branch:
        description: 'Target branch to push to'
        required: true
      pr_title:
        description: 'Title for the pull request'
        required: true
      pr_body:
        description: 'Body content for the pull request'
        required: false

permissions:
  contents: write
  pull-requests: write

jobs:
  cherry-pick-and-create-pr:
    runs-on: ubuntu-latest
    steps:
    - name: Set repository names
      id: set-repo
      run: |
        echo "source_repo=opendatahub-io/${{ github.event.inputs.source_repo }}" >> $GITHUB_OUTPUT
        echo "target_repo=red-hat-data-services/${{ github.event.inputs.target_repo }}" >> $GITHUB_OUTPUT

    - name: Configure Git
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@github.com"

    - name: Checkout source repo
      uses: actions/checkout@v4
      with:
        repository: ${{ steps.set-repo.outputs.source_repo }}
        ref: ${{ github.event.inputs.source_branch }}
        token: ${{ secrets.PAT_TOKEN }}

    - name: Create a new branch for the PR
      run: |
        git checkout -b pr-branch

    - name: Cherry-pick commits
      run: |
        git cherry-pick ${{ github.event.inputs.cherry_pick_commits }}

    - name: Checkout target repo
      uses: actions/checkout@v4
      with:
        repository: ${{ steps.set-repo.outputs.target_repo }}
        ref: ${{ github.event.inputs.target_branch }}
        token: ${{ secrets.PAT_TOKEN }}
        path: target-repo

    - name: Copy changes to target repo
      run: |
        rsync -a . ../target-repo/
      working-directory: target-repo

    - name: Push to new branch
      run: |
        cd target-repo
        git checkout -b pr-branch
        git add .
        git commit -m "Cherry-picked commits: ${{ github.event.inputs.cherry_pick_commits }}"
        git push origin pr-branch
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v3
      with:
        token: ${{ secrets.PAT_TOKEN }}
        commit-message: "Cherry-picked commits: ${{ github.event.inputs.cherry_pick_commits }}"
        base: ${{ github.event.inputs.target_branch }}
        head: pr-branch
        title: ${{ github.event.inputs.pr_title }}
        body: ${{ github.event.inputs.pr_body }}
